@model Traffic_ASP_MVC.Models.Schedule

@{
    ViewData["Title"] = "Edit";
}

<!-- BEGIN POP-UP MESSAGE AREA -->
<div class="submit-progress hidden">
    <i class="fa fa-2x fa-spinner fa-spin"></i>
    <label>Please wait while Saving Data...</label>
</div>

<div class="row">
    <div class="col-md-2">
        <h1>Load # @Model.MbolNbr</h1>
        <h3>Load Type: @Model.Type</h3>
    </div>
    <div class="col-md-8 mt-1">          
        @if (Model.StartTime == null && Model.LoaderName == null && Model.Status == "At Dock" && (Model.Type == "LIVE" || Model.Type == "SPOT"))
        {
            <h5>
                Looks like you are starting a load?  Enter Loader Name and click Set Start. Then Click Save.<br />
                Click Here! <span><button id="btnStartLiveStartHint" class="btn btn-group-sm btn-success bi bi-check"></button></span>
            </h5>
        }
        else if (Model.StartTime != null && Model.LoaderName != null && Model.Status == "At Dock" && Model.Type == "LIVE")
        {
            <h5>
                Is this Live Load done?  If so, Click on Set Finish, make sure status is Loaded, and Click on Save.<br />
                Click Here! <span><button id="btnFinishLiveStartHint" class="btn btn-group-sm btn-success bi bi-check"></button></span>
            </h5>
        }
        else if (Model.Status == "Created" && Model.Type == "SPOT")
        {
            <h5>
                What are we doing with this Live Load? <span><button id="btnSetupToStageLive" class="btn btn-group-sm btn-primary">Staging Only</button></span>
                <span><button id="btnPutInDoorLive" class="btn btn-group-sm btn-primary">Putting Trailer in Door</button></span>
            </h5>
            <div id="stageOnly" class="hidden">
                <h5>
                    Enter Stager name, click on Set Start under STAGING section and Click on Save.<br /> Click Here!
                    <span><button id="btnStageStartHint" class="btn btn-group-sm btn-success bi bi-check"></button></span>
                </h5>
            </div>
            <div id="putInDoor" class="hidden">
                <h5>
                    Change Status to At Dock. Select Trailer Number from Spot Trailer Numbers Dropdown, CLICK ON Set Spot Trailer Button, select door from Location, and click on Save.")<br /> Click Here!
                    <span><button id="btnInDoorStartHintSpot" class="btn btn-group-sm btn-success bi bi-check"></button></span>
                </h5>
            </div>
        }
        else if (Model.Status == "Created" && Model.Type == "LIVE")
        {
            <h5>
                What are we doing with this Live Load? <span><button id="btnSetupToStageLive" class="btn btn-group-sm btn-primary">Staging Only</button></span>
                <span><button id="btnPutInDoorLive" class="btn btn-group-sm btn-primary">Putting Trailer in Door</button></span>
            </h5>
            <div id="stageOnly" class="hidden">
                <h5>
                    Enter Stager name, click on Set Start under STAGING section and Click on Save.<br /> Click Here!
                    <span><button id="btnStageStartHint" class="btn btn-group-sm btn-success bi bi-check"></button></span>                    
                </h5>
            </div>
            <div id="putInDoor" class="hidden">
                <h5>
                    Change Status to At Dock. Type in Trailer Number, select door from Location, and click on Save.<br /> Click Here!
                    <span><button id="btnInDoorStartHint" class="btn btn-group-sm btn-success bi bi-check"></button></span>
                </h5>
            </div>

        }
        else if (Model.Type == "SPOT" && Model.Status == "Staged" && Model.StageFinishTime != null)
        {
            <h5>
                Are we Loading this Staged Spot Load? Select a trailer from Spot Trailer Numbers dropdown. Click on Set Spot Trailer.<br> 
                Now Select a Door from the Location dropdown. Click on Save.<br>
                Click Here! <span><button id="btnPutSpotInDoorShowHint" class="btn btn-group-sm btn-success bi bi-check"></button></span>
            </h5>
        }
        else if (Model.StartTime != null && Model.LoaderName != null && Model.Status == "At Dock" && Model.Type == "SPOT" && Model.FinishTime == null)
        {
            <h5>
                Is this Spot Load done?  If so, Click on Set Finish, make sure status is Loaded. Select Exit or a location in the yard from Location.
                Now, click on Set Spot Location. Now, Click on Save.<br />
                Click Here! <span><button id="btnFinishSpotStartHint" class="btn btn-group-sm btn-success bi bi-check"></button></span>
            </h5>
        }
        else if (Model.Status == "Staged" && Model.StageFinishTime == null && Model.Type == "LIVE")
        {
            <h5>
                Is this Stage Load Finished? Click on the Set Finish button to set the finish time.  Next, Enter the Stage Location.  Now, Click on Save.<br>
                Click Here! <span><button id="btnStageFinishLiveShowHint" class="btn btn-group-sm btn-success bi bi-check"></button></span>
            </h5>
        }
        else if (Model.Status == "Staged" && Model.StageFinishTime != null && Model.Type == "LIVE")
        {
            <h5>
                Are we Loading this Staged Live Load? Change Status to At Dock. Enter the Trailer Number and Select Door Location. Click on Save.<br>
                Click Here! <span><button id="btnPutLiveInDoorShowHint" class="btn btn-group-sm btn-success bi bi-check"></button></span>
            </h5>
        }
        else if (Model.Type == "SPOT" && Model.StageStartTime != null && Model.StageFinishTime == null && Model.Status == "Staged")
        {
            <h5>
                Is this Spot load done staging? Type in the Stage Location. Click on the Set Finish button. Click on Save<br>
                Click Here! <span><button id="btnStageFinishShowHint" class="btn btn-group-sm btn-success bi bi-check"></button></span>
            </h5>
        }
    </div>
</div>

<hr />
<div class="container">
    <form asp-action="Edit">
        <div class="row row-cols-4">
            <div class="col">
                <div class="row px-1">
                    <div class="col border border-2 border-dark rounded-3">

                        <!-- LOAD INFO SECTION -->

                        <h4 class="text-center">LOAD INFO</h4>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="ID" />
                        <div class="form-group">
                            <label asp-for="ScheduleDate" class="control-label">Date</label>
                            <input type="text" asp-for="ScheduleDate" class="form-control datepicker" value=@Model.ScheduleDate.ToShortDateString() readonly/>
                            <span asp-validation-for="ScheduleDate" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="TimeSlot" class="control-label">Time Slot</label>
                            <input asp-for="TimeSlot" class="form-control" value=@Model.TimeSlot readonly />
                        </div>
                        <div class="form-group">
                            <label asp-for="CarrierName" class="control-label">Carrier Name</label>
                            @Html.DropDownListFor(n => n.CarrierName, ViewBag.Carrier as SelectList, "Select Carrier" , new {@class="form-control"})
                            <span asp-validation-for="CarrierName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="CustomerName" class="control-label">Customer Name</label>
                            <input asp-for="CustomerName" class="form-control" value=@Model.CustomerName readonly/>
                            <span asp-validation-for="CustomerName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="CustomerCity" class="control-label">City Name</label>
                            <input asp-for="CustomerCity" class="form-control" value=@Model.CustomerCity readonly/>
                            <span asp-validation-for="CustomerCity" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="CustomerState" class="control-label">State Name</label>
                            <input asp-for="CustomerState" class="form-control" value=@Model.CustomerState readonly/>
                            <span asp-validation-for="CustomerState" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="NumberCartons" class="control-label"># Cartons</label>
                            <input asp-for="NumberCartons" class="form-control" value=@Model.NumberCartons readonly/>
                            <span asp-validation-for="NumberCartons" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="LoadCube" class="control-label">Cube</label>
                            <input asp-for="LoadCube" class="form-control" value=@Model.LoadCube readonly/>
                            <span asp-validation-for="LoadCube" class="text-danger"></span>
                        </div>                        
                        <hr />
                    </div>
                </div>                
            </div>
            <div class="col">
                <div class="row px-1">
                    <div class="col border border-2 border-dark rounded-3">

                        <!-- LOAD INFO CONTINUED SECTION -->

                        <h4 class="text-center">LOAD INFO CONTINUED</h4>
                        <div class="form-group">
                            <label asp-for="LoadComments" class="control-label">Comments</label>
                            <input asp-for="LoadComments" class="form-control" />
                            <span asp-validation-for="LoadComments" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="LoadScheduler" class="control-label">Scheduler</label>
                            <input asp-for="LoadScheduler" class="form-control" value=@Model.LoadScheduler readonly/>
                            <span asp-validation-for="LoadScheduler" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="MbolNbr" class="control-label">MBOL #</label>
                            <input asp-for="MbolNbr" class="form-control" value=@Model.MbolNbr readonly/>
                            <span asp-validation-for="MbolNbr" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="LoadNbr" class="control-label">Load #</label>
                            <input asp-for="LoadNbr" class="form-control" value=@Model.LoadNbr readonly />
                            <span asp-validation-for="LoadNbr" class="text-danger"></span>
                        </div>
                        <hr />
                        <div class="form-group">
                            <label asp-for="Status" class="control-label @((Model.Status != null && Model.LoaderName != null && Model.FinishTime == null) ? "text-danger" : null)">@((Model.Status != null && Model.LoaderName != null && Model.FinishTime == null) ? "SET STATUS TO LOADED" : "Status")</label>
                            <select id="loadStatus" asp-for="Status" class="form-control @((Model.Status != null && Model.LoaderName != null && Model.FinishTime == null) ? "border-danger" : null)">
                                <option value="">Select Status</option>
                                <option value="Created">Created</option>
                                <option value="At Dock">At Dock</option>
                                <option value="Staged">Staged</option>
                                <option value="Loaded">Loaded</option>
                            </select>
                            <span asp-validation-for="Status" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Type" class="control-label">Type</label>
                            <input asp-for="Type" class="form-control" readonly />
                            <span asp-validation-for="Type" class="text-danger"></span>
                        </div>
                        @if (Model.StageStartTime == null)
                        {
                            <hr />
                        }                        
                        <div class="form-group">
                            @if (Model.Type == "Spot" || Model.Status == "At Dock")
                            {
                                <label asp-for="TrailerNbr" class="control-label">Select Spot Trailer</label>
                                <input id="trailerNbr" asp-for="TrailerNbr" class="form-control" readonly />
                            }
                            else
                            {
                                @if (Model.StageStartTime == null || Model.StageFinishTime != null)
                                {
                                    <label asp-for="TrailerNbr" class="control-label">Enter Trailer #</label>
                                    <input id="trailerNbr" asp-for="TrailerNbr" class="form-control" />
                                }                                
                            }
                        </div>
                        <div class="form-group">
                            @if (Model.Status == "At Dock")
                            {
                                <label asp-for="Location" class="control-label">Location</label>
                                <input id="setLocation" asp-for="Location" class="form-control" value=@Model.Location readonly />
                            }
                            else
                            {
                                @if (Model.StageStartTime == null || Model.StageFinishTime != null)
                                {
                                    @Html.LabelFor(n => n.Location, new {@class="control-label"})
                                    @Html.DropDownListFor(n => n.Location, ViewBag.Doors as SelectList, "Select Location", new {@class="form-control"})                                         <span asp-validation-for="Location" class="text-danger"></span>
                                }
                                
                            }
                        </div>
                        @if (Model.StageStartTime == null || Model.StageFinishTime != null)
                        {
                            <hr />
                        }                        
                    </div>
                </div>                
            </div>
            <div class="col @(Model.Status == "At Dock" || Model.StageFinishTime != null ? "hidden" : null)">
                <div class="row px-1">
                    <div id="stageSection" class="col border border-2 border-dark rounded-3 @(Model.Status == "Created" || Model.Status == "Staged" && Model.StageStartTime == null ? "hidden" : null)">

                        <!-- STAGING SECTION -->

                        <h4 class="text-center">STAGING</h4>
                        <div class="form-group">                            
                            <label asp-for="StagerName" class="control-label">Stager Name</label>
                            <input id="stager" asp-for="StagerName" class="form-control" />
                            <span id="stagerWarning" asp-validation-for="StagerName" class="text-danger"></span>
                        </div>
                        <div class="form-group">                            
                            <label asp-for="StageStartTime" class="control-label">Start Time</label>
                            <input id="stageStartTime" asp-for="StageStartTime" class="form-control"/>
                            @if (Model.StageStartTime != null)
                            {
                                <a id="stageStart" class="btn btn-success mt-1 disabled" role="button" aria-disabled="true">Set Start</a>
                            }
                            else 
                            {
                                <a id="stageStart" class="btn btn-success mt-1" role="button" aria-disabled="false">Set Start</a>
                            }
                        </div>
                        <div class="form-group">
                            <label asp-for="StageFinishTime" class="control-label @((Model.StageStartTime != null && Model.StagerName != null && Model.FinishTime != null) ? "text-danger" : null)">Finish Time</label>
                            <input id="stageFinishTime" asp-for="StageFinishTime" class="form-control @((Model.StageStartTime != null && Model.StagerName != null && Model.FinishTime != null) ? "border-danger" : null)"/>
                            @if (Model.StageFinishTime != null)
                            {
                                <a id="stageFinish" class="btn btn-danger mt-1 disabled" role="button" aria-disabled="true">Set Finish</a>
                            }
                            else
                            {
                                <a id="stageFinish" class="btn btn-danger mt-1" role="button" aria-disabled="false">Set Finish</a>    
                            }
                        </div>
                        <hr />
                        <div class="form-group">
                            <label asp-for="StageLocation" class="control-label @((Model.StageStartTime != null && Model.StagerName != null && Model.FinishTime != null) ? "text-danger" : null)">@((Model.StageStartTime != null && Model.StagerName != null && Model.FinishTime != null) ? "ENTER STAGE LOCATION" : "Stage Location")</label>
                            <input asp-for="StageLocation" class="form-control @((Model.StageStartTime != null && Model.StagerName != null && Model.FinishTime != null) ? "border-danger" : null)" />
                            <span id="stageLocationWarning" asp-validation-for="StageLocation" class="text-danger"></span>
                        </div>
                        <hr />
                    </div>
                </div>                
            </div>
            <div class="col">
                <div class="row px-1">
                    <div class="col border border-2 border-dark rounded-3">

                        <!-- LOADING SECTION -->

                        <h4 class="text-center @(Model.TrailerNbr == null ? "hidden" : null)">LOADING</h4>
                        <div class="form-group @(Model.TrailerNbr == null ? "hidden" : null)">
                            <label asp-for="LoaderName" class="control-label @((Model.Status == "At Dock" && Model.LoaderName == null && Model.StartTime == null) ? "text-danger" : null)">Loader Name</label>
                            <input id="loader" asp-for="LoaderName" class="form-control @((Model.Status == "At Dock" && Model.LoaderName == null && Model.StartTime == null) ? "border-danger" : null)" />
                            <span id="loaderWarning" asp-validation-for="LoaderName" class="text-danger"></span>
                        </div>
                        <div class="form-group @(Model.TrailerNbr == null ? "hidden" : null)">
                            <label asp-for="StartTime" class="control-label @((Model.Status == "At Dock" && Model.LoaderName == null && Model.StartTime == null) ? "text-danger" : null)">Start Time</label>
                            <input id="loadStartTime" asp-for="StartTime" class="form-control @((Model.Status == "At Dock" && Model.LoaderName == null && Model.StartTime == null) ? "border-danger" : null)" />
                            @if (Model.StartTime != null)
                            {
                                <a id="loadStart" class="btn btn-success mt-1 disabled" role="button" aria-disabled="true">Set Start</a>
                            }   
                            else
                            {
                                <a id="loadStart" class="btn btn-success mt-1" role="button" aria-disabled="false">Set Start</a>    
                            }
                        </div>
                        <div class="form-group @(Model.TrailerNbr == null || Model.StartTime == null ? "hidden" : null)">
                            <label asp-for="FinishTime" class="control-label @((Model.Status != null && Model.LoaderName != null && Model.FinishTime == null) ? "text-danger" : null)">Finish Time</label>
                            <input id="loadFinishTime" asp-for="FinishTime" class="form-control @((Model.Status != null && Model.LoaderName != null && Model.FinishTime == null) ? "border-danger" : null)"/>
                            @if (Model.FinishTime != null)
                            {
                                <a id="loadFinish" class="btn btn-danger mt-1 disabled" role="button" aria-disabled="true">Set Finish</a>
                            }
                            else 
                            {
                                <a id="loadFinish" class="btn btn-danger mt-1" role="button" aria-disabled="false">Set Finish</a>
                            }
                        </div>
                        <hr />
                        <div class="form-group mt-3 d-flex flex-column justify-content-end">
                            <input id="save" type="submit" onclick="return DisplayProgressMessage(this, 'Saving...')" value="Save" class="btn btn-primary"/>
                            <br />
                            <a class="btn btn-warning" asp-action="Index">Back to List</a>
                        </div>
                        <hr />
                        @if (Model.Type == "LIVE")
                        {
                            
                        }
                        else
                        {
                            @if (Model.Type == "SPOT" && (Model.Status != "At Dock" && Model.StageFinishTime != null) || (Model.Status == "Created" && Model.StageFinishTime == null))
                            {
                                @Html.LabelFor(n => n.TrailerNbr, "Spot Trailer Numbers", new {@class="control-label"})
                                @Html.DropDownListFor(n => n.TrailerNbr, ViewBag.DockLot as SelectList, "Select Trailer", new {@class="form-control", @id="spotTrailer"})
                                <div class="form-group">
                                    <a id="setSpot" class="btn btn-success mt-1" role="button">Set Spot Trailer</a>
                                </div>
                                <hr />
                            }
                            @if (Model.Status == "At Dock" && Model.StartTime != null && Model.Type == "SPOT")
                            {
                                @Html.LabelFor(n => n.Location, new {@class="control-label"})
                                @Html.DropDownListFor(n => n.Location, ViewBag.Lot as SelectList, "Select LOT", new {@class="form-control border-danger", @id="setLot"})
                                <div class="form-group">
                                    <a id="lotBtn" class="btn btn-success mt-1" role="button">Set Spot Location</a>
                                </div>
                                <hr />
                            }
                        }                        
                    </div>                    
                </div>
            </div>
        </div>         
    </form>
</div>
 <style>
   .submit-progress-bg {
     background-color: lightgray;
     opacity: .5;
   }
    
   .submit-progress {
     position: fixed;
     top: 50%;
     left: 50%;
     height: 6em;
     padding-top: 2.3em;
     z-index: 1;
     /* The following properties are the ones most likely to change */
     width: 20em;
     /* Set 'margin-left' to a negative number that is 1/2 of 'width' */
     margin-left: -10em;
     padding-left: 2.1em;
     background-color: black;
     color: white;
     -webkit-border-radius: 0.4em;
     -moz-border-radius: 0.4em;
     border-radius: 0.4em;
     box-shadow: 0.4em 0.4em rgba(0,0,0,0.6);
     -webkit-box-shadow: 0.4em 0.4em rgba(0,0,0,0.6);
     -moz-box-shadow: 0.4em 0.4em rgba(0,0,0,0.6);
   }
    
   /* Changing style for spinner */
   .submit-progress {
     padding-top: 2em;
     width: 23em;
     margin-left: -11.5em; /* Set to a negative number that is 1/2 of the width */
   }
    
     .submit-progress i {
       margin-right: 0.5em;
     }
     .hidden{
         display:none;
     }
 </style>
      

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script type="text/javascript">
    function DisplayProgressMessage(ctl, msg) {     
        event.preventDefault();
        $(ctl).prop("disable", true).text(msg);
        $("body").addClass("submit-progress-bg");
        $(".submit-progress").removeClass("hidden");
        setTimeout(function() {
            $("form").submit();
        }, 1);
        return true;
    }
</script>

}
