@model cloudscribe.Pagination.Models.PagedResult<Schedule>

@{
    ViewData["Title"] = "Schedule";
}
@if (TempData["AlertMessage"] != null)
{
    <div id="alert" class="alert alert-success position-relative">
        <div id="close" class="position-absolute fixed-top">X</div>
        <strong>Success !</strong> @TempData["AlertMessage"]
    </div>
}
<div class="sticky-top titleFixed pb-1">
    <div class="container">
        <h1>Schedule</h1>
        <div class="row justify-content-center">
            <div class="col-md-3">
                <div class="form-group">
                    <label class="control-label">Click to Select Date</label>
                    <input id="scheduleDate" type="text" readonly class="form-control datepicker" />
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label class="control-label">Status</label>
                    <select id="loadStatusSel" class="form-control">
                        <option value="">Select Status</option>
                        <option value="Created">Created</option>
                        <option value="At Dock">At Dock</option>
                        <option value="Staged">Staged</option>
                        <option value="Loaded">Loaded</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label class="control-label">Type</label>
                    <select id="loadTypeSel" class="form-control">
                        <option value="">Select Type</option>
                        <option value="Live">Live</option>
                        <option value="Spot">Spot</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid table-responsive">
    <table id="schedule" class="table table-bordered table-striped w-auto">
        <thead>
            <tr>
                <th><p>Actions</p></th>
                <th><p>Date</p></th>
                <th><p>Time Slot</p></th>
                <th><p>Status</p></th>
                <th><p>Type</p></th>
                <th><p># Cartons</p></th>
                <th><p>Cube</p></th>
                <th><p>MBOL #</p></th>
                <th><p>Load #</p></th>
                <th><p>Loader Name</p></th>
                <th><p>Carrier Name</p></th>
                <th><p>Customer Name</p></th>
                <th><p>City</p></th>
                <th><p>State</p></th>
                <th><p>Comments</p></th>
                <th><p>Scheduler</p></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model.Data) {
            <tr>
                <td class="fit">
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                    <a class="btn btn-warning" asp-action="Details" asp-route-id="@item.ID">Details</a>
                    @*<a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.ID">Delete</a>*@
                </td>
                <td class="fit">
                    @Html.DisplayFor(modelItem => item.ScheduleDate)
                </td>
                <td class="fit">
                    @Html.DisplayFor(modelItem => item.TimeSlot)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberCartons)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LoadCube)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MbolNbr)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LoadNbr)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LoaderName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CarrierName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerCity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerState)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LoadComments)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LoadScheduler)
                </td>
            </tr>
    }
        </tbody>
    </table>
</div>


